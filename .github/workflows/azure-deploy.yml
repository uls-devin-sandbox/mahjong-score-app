name: Build and Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_CONTAINER_REGISTRY: your-registry.azurecr.io
  RESOURCE_GROUP: mahjong-rg
  BACKEND_CONTAINER_NAME: mahjong-backend

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      working-directory: ./backend
      run: mvn clean package -DskipTests
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push backend Docker image
      working-directory: ./backend
      run: |
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/mahjong-backend:${{ github.sha }} .
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/mahjong-backend:${{ github.sha }}
    
    - name: Deploy to Azure Container Instance
      run: |
        az container create \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --name ${{ env.BACKEND_CONTAINER_NAME }} \
          --image ${{ env.AZURE_CONTAINER_REGISTRY }}/mahjong-backend:${{ github.sha }} \
          --cpu 1 \
          --memory 1 \
          --ports 8080 \
          --dns-name-label mahjong-backend-${{ github.run_number }} \
          --environment-variables \
            SPRING_PROFILES_ACTIVE=prod \
            DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            DATABASE_USERNAME="${{ secrets.DATABASE_USERNAME }}" \
            DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}" \
            SERVER_PORT=8080 \
            LOG_LEVEL=INFO

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "frontend"
        api_location: ""
        output_location: "dist"
